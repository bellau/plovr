#!/usr/bin/env node

// After installing the package as a dependency we will want to remove test files and any other
// junk that is not directly needed as part of the library.

var fs = require('fs')
var glob = require('glob')
var path = require('path')

var cwd = path.resolve(__dirname, '../')
var deleteFiles = isNpmInstall(cwd)

console.log('> Cleaning up closure-library install in', cwd)

if (!deleteFiles) {
  console.log('This doesn\'t look like an NPM install, dry run only no files will be deleted.')
}

var pattern = '{**/*.css,**/*.data,**/*.gif,**/*.html,**/*.png,**/*_test.js,**/.*}'
glob(pattern, {cwd: cwd}, function (er, files) {
  files.forEach(deleteFile)
  console.log('>', files.length, 'files removed.')
  process.exit(0)
})

/**
 * Deletes a file, if we're pretty certain we're in a node_modules directory.
 */
function deleteFile(file) {
  if (deleteFiles) {
    fs.unlinkSync(path.join(cwd, file))
  } else {
    console.log('> > Dry run, not deleting:', file)
  }
}


/**
 * Tries to determine whether the working directory is the result of an NPM
 * install.  Conservative to avoid deleting things by accident.
 */
function isNpmInstall(dir) {
  var parts = dir.split('/')
  return parts[parts.length - 2] == 'node_modules'
}
